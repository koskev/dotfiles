alias emerge='emerge --ask'
alias sudo='sudo '
export PATH=$PATH:~/bin:/home/kevin/Dokumente/Projekte/esp32/crosstool-NG/builds/xtensa-esp32-elf/bin:~/.local/bin
#source /etc/X11/xinit/xinitrc.d/52load-gtk-vector-screenshot-gtk-module
#source /usr/share/terminix/scripts/terminix_int.sh
export EDITOR=nvim

#source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
#export TERM="xterm-256color"
#export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=252,bold"

# Switch dev
export DEVKITPRO=/var/chroot/archlinux/opt/devkitpro
export DEVKITARM=${DEVKITPRO}/devkitARM

# ESP32 dev
export IDF_PATH=/home/kevin/Dokumente/Projekte/esp32/esp-idf

#ekos data for ccd sim
export GSCDAT=/usr/local/share/GSC
### for i3

#if [ "$0" = "/usr/sbin/lightdm-session" -a "$DESKTOP_SESSION" = "i3" ]; then
#    export $(gnome-keyring-daemon -s)
#fi
#echo $0 >> /tmp/zsh.log
function _dotgit
{
	COMPREPLY=()

	local -a opts=()

	local use_opts=0

	[[ $COMP_CWORD -eq 1 ]] && use_opts=1
	[[ $COMP_CWORD -eq 2 ]] && [[ ${COMP_WORDS[1]} == verbose ]] && \
		use_opts=1

	if [[ $use_opts -eq 1 ]]; then
		opts+=("help")
		opts+=("init")
		opts+=("update")
		opts+=("restore")
		opts+=("clean")
		opts+=("hard-update")
		opts+=("hard-restore")
		opts+=("hard-clean")
		opts+=("encrypt")
		opts+=("decrypt")
		opts+=("passwd")
		opts+=("diff")
		opts+=("generate")

		[[ $COMP_CWORD -eq 1 ]] && opts+=("verbose")
	else
		local -a ls_dir=()
		[ -d "dotfiles" ] && ls_dir+=("dotfiles")
		[ -d "dmz" ] && ls_dir+=("dmz")

		for i in "${ls_dir[@]}"; do
			for f in $i/*; do
				[ -d "$f" ] && opts+=("${f#$i/}")
			done
			unset f
		done
		unset i

		local -a fl=()
		[ -f "filelist" ] && fl+=("filelist")
		[ -f "cryptlist" ] && fl+=("cryptlist")

		for i in "${fl[@]}"; do
			while read -r line; do
				! [[ $line =~ \= ]] && continue;
				opts+=(${line%%\=*})
			done < "$i"
		done
		opts+=("common")
		opts+=("$HOSTNAME")

		opts=($(IFS=$'\n'; sort -u <<<"${opts[*]}"))
	fi

	COMPREPLY=($(IFS=$' '; compgen -W "${opts[*]}" "${COMP_WORDS[COMP_CWORD]}"))
}

HISTSIZE=10000000
SAVEHIST=10000000

# for docker buildx
export DOCKER_BUILD_KIT=1
export DOCKER_CLI_EXPERIMENTAL=enabled

source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh


export ESPHOME_DASHBOARD_USE_PING=true
# reflink cp
#cp() {
#  command cp --reflink=auto "$@"
#}

alias dmesgj='journalctl --dmesg -o short-monotonic --no-hostname --no-pager'

chezmoi-cd() {
    cd $(chezmoi source-path)
}

# fix java stuff in wayland
export _JAVA_AWT_WM_NONREPARENTING=1

export XDG_CURRENT_DESKTOP=sway
if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
	sway
fi
